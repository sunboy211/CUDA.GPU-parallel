//GPU端执行GPU核函数 Hflip() Vflip()
int IPH=ip.Hpixels; int IPV=ip.Vpixels;//像素
...
BlkPerRow=(IPH+THrPerBlk-1)/ThrPerBlk; //block per row
NumBlocks=IPV*BlkPerRow;
switch(Flip){
  case 'H':Hlip <<< NumBlocks,ThrPerBlk >>> (GPUCopyImg,GPUImg,IPH);
            GPUResult=GPUCopyImg; GPUDataTransfer=2*IMAGESIZE; break;
  case 'V':Vlip <<< NumBlocks,ThrPerBlk >>> (GPUCopyImg,GPUImg,IPH,IPV);
            GPUResult=GPUCopyImg; GPUDataTransfer=2*IMAGESIZE; break;
  //转置T(transposition)
  case 'T': Hlip <<< NumBlocks,ThrPerBlk >>> (GPUCopyImg,GPUImg,IPH);
            Vlip <<< NumBlocks,ThrPerBlk >>> (GPUCopyImg,GPUImg,IPH,IPV);
            GPUResult=GPUImg; GPUDataTransfer=4*IMAGESIZE; break;
  //copy
  case 'C': NumBlocks=(IMAGESIZE+THrPerBlk-1)//ThrPerBlk;
            Pixcopy <<< NumBlocks,ThrPerBlk >>> (GPUCopyImg,GPUImg,IMAGESIZE);
            GPUResult=GPUCopyImg; GPUDataTransfer=2*IMAGESIZE; break;
}

//核函数实现:垂直翻转图像
__global__  //让nvcc编译器知道是GPU端函数
void Vlip(uch *ImgDst,uch *ImgSrc,ui Hpixels,ui Vpixels){
  ui ThrPerBlk=blockDim.x; //每个线程块有多少线程
  ui MYbid=blockIdx.x; //线程块ID
  ui MYtid=threadIdx.x; //线程ID
  ui MYgtid=ThrPerBlk * MYbid * MYtid;  //全局线程ID
  
}
